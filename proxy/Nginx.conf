http {
    listen 80;

    upstream backend {
        server backend:8080; # Reference backend via container name as defined in Docker compose file and internal port.
    }

    upstream frontend {
        server frontend:7000;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://frontend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS Header (Cross Origin Resource Sharing : Used for setting whether Containers and other external servers are allowed to communicate).
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST';
            add_header 'Access-Control-Allow-Origin' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';

        }

        #NOTE : Database is not accessed through this proxy, it is accessed only through the backend using jdbc protocols.
        location /api/ {
            proxy_pass http://backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS Header (Cross Origin Resource Sharing : Used for setting whether Containers and other external servers are allowed to communicate).
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST';
            add_header 'Access-Control-Allow-Origin' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
        }
    }

     
   
}
